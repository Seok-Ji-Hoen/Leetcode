# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxDepth(self, root: TreeNode) -> int:
        def depth(root,acc):
            if root.right==None and root.left==None:
                return acc
            elif root.left==None:
                return max(depth(root.right,acc+1),1)
            elif root.right==None:
                return max(depth(root.left,acc+1),1)
            
            else:
                return max(depth(root.right,acc+1),depth(root.left,acc+1))
        
        if root==None:
            return 0
        else:
            return depth(root,1)
            
            
  ### solution 참고
  class Solution:
    def maxDepth(self, root: TreeNode) -> int:
        if root==None:
            return 0
        else:
            left = self.maxDepth(root.left)
            right = self.maxDepth(root.right)
            return max(left,right)+1
